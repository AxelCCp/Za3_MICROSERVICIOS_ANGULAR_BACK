package ms.students.server.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import ms.students.commons.models.entity.Student;
import ms.students.server.models.services.IStudentService;

@RestController
@RequestMapping("st")
public class StudentController {
	
	
	/*
	@GetMapping("/findbyname/{text}")
	public ResponseEntity<?>findByNameOrLastname(String text) {
		return ResponseEntity.ok(iStudentService.findByNameOrLastname(text));
	}
	*/
	
	@GetMapping
	public ResponseEntity<?>findAll(){
		return ResponseEntity.ok(iStudentService.findAll());
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<?>findById(@PathVariable Long id){
		return ResponseEntity.ok().body(iStudentService.findById(id));
	}
	
	@PostMapping
	public ResponseEntity<?>create(@RequestBody Student student){
		return ResponseEntity.status(HttpStatus.CREATED).body(iStudentService.save(student));
	}
	
	@PutMapping("/{id}")
	public ResponseEntity<?>update(@RequestBody Student student, @PathVariable Long id){
		
		Student studentDB = iStudentService.findById(id);
		studentDB.setName(student.getName());
		studentDB.setLastname(student.getLastname());
		studentDB.setAge(student.getAge());
		studentDB.setEmail(student.getEmail());
		//studentDB.setCountry(student.getCountry());
		studentDB.setCreateAt(student.getCreateAt());
		return ResponseEntity.status(HttpStatus.CREATED).body(iStudentService.save(studentDB));
	}
	
	@DeleteMapping("/{id}")
	public ResponseEntity<?>deleteById(@PathVariable Long id){
		return ResponseEntity.status(HttpStatus.NO_CONTENT).build();
	}
	
	@Autowired
	private IStudentService iStudentService;
}
